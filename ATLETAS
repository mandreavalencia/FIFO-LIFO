#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_ATLETAS 100
#define MAX_RONDAS 10

// Estructura para almacenar los datos de un atleta
typedef struct {
    char nombre[50];
    int numero;
    float tiempos[MAX_RONDAS]; // FIFO
    float promedio; // LIFO
} Atleta;

// Funci贸n para solicitar los datos de un atleta al usuario
Atleta solicitar_datos() {
    Atleta atleta;
    printf("Ingrese el nombre del atleta: ");
    scanf("%s", atleta.nombre);
    printf("Ingrese el numero asignado al atleta: ");
    scanf("%d", &atleta.numero);
    return atleta;
}

// Funci贸n para registrar el tiempo de un atleta en el arreglo FIFO
void registrar_tiempo(Atleta* atleta) {
    float tiempo;
    printf("Ingrese el tiempo del atleta %s en esta ronda: ", atleta->nombre);
    scanf("%f", &tiempo);
    // Desplazar los tiempos anteriores hacia la izquierda
    for (int i = 0; i < MAX_RONDAS-1; i++) {
        atleta->tiempos[i] = atleta->tiempos[i+1];
    }
    // Agregar el nuevo tiempo al final del arreglo FIFO
    atleta->tiempos[MAX_RONDAS-1] = tiempo;
}

// Funci贸n para calcular el promedio de un atleta en base a los tiempos en el arreglo FIFO
float calcular_promedio(Atleta atleta) {
    int num_rondas = 0;
    float suma_tiempos = 0;
    for (int i = 0; i < MAX_RONDAS; i++) {
        if (atleta.tiempos[i] > 0) {
            num_rondas++;
            suma_tiempos += atleta.tiempos[i];
        }
    }
    if (num_rondas > 0) {
        return suma_tiempos / num_rondas;
    } else {
        return 0;
    }
}

// Funci贸n para ordenar el arreglo LIFO de atletas por promedio (de menor a mayor) y mostrar los resultados
void ordenar_lifo(Atleta* atletas, int num_atletas) {
    // Calcular el promedio de cada atleta
    for (int i = 0; i < num_atletas; i++) {
        atletas[i].promedio = calcular_promedio(atletas[i]);
    }

    // Ordenar el arreglo LIFO por promedio (de menor a mayor)
    for (int i = 0; i < num_atletas-1; i++) {
        for (int j = i+1; j < num_atletas; j++) {
            if (atletas[i].promedio > atletas[j].promedio) {
                Atleta temp = atletas[i];
                atletas[i] = atletas[j];
                atletas[j] = temp;
            }
        }
    }

    // Mostrar los resultados de la prueba de atletismo
    printf("\nResultados de la prueba de atletismo:\n");
    printf("=====================================\n");
    for (int i = 0; i < num_atletas; i++) {
        printf("%d. %s - Promedio: %.2f\n", i+1, atletas[i].nombre, atletas[i].promedio);
    }
}

int main() {
    Atleta atletas[MAX_ATLETAS];
    int num_atletas = 0;

    // Pedir los datos de los atletas
    printf("Ingrese los datos de los atletas:\n");
    printf("(Para terminar todo el registro de la primera y segunda vuelva, ingrese la 'fin'.)\n");
    while (1) {
        Atleta atleta = solicitar_datos();
        if (strcmp(atleta.nombre, "fin") == 0) {
            break;
        }
        atletas[num_atletas] = atleta;
        num_atletas++;
    }

    // Registrar los tiempos de los atletas en cada ronda
    printf("\nIngrese los tiempos de los atletas en cada ronda:\n");
    for (int ronda = 1; ronda <= MAX_RONDAS; ronda++) {
        printf("\nRonda %d:\n", ronda);
        for (int i = 0; i < num_atletas; i++) {
            registrar_tiempo(&atletas[i]);
        }
    }

    // Ordenar los atletas por promedio y mostrar los resultados
    ordenar_lifo(atletas, num_atletas);

    return 0;
}
